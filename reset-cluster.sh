#!/usr/bin/env bash
set -euo pipefail

echo "‚ö†Ô∏è  WARNING: Hard reset of local dev environment starting..."
echo "Everything will be wiped: Terraform state, k3d clusters, Docker containers."

# 1. –£–±–∏–≤–∞–µ–º –≤—Å–µ –∫–ª–∞—Å—Ç–µ—Ä—ã k3d
if command -v k3d &>/dev/null; then
  echo "üßπ Deleting all k3d clusters..."
  k3d cluster delete --all || true
else
  echo "‚ö†Ô∏è k3d not found, skipping..."
fi

# 2. –ß–∏—Å—Ç–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã Docker, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å k3d
if command -v docker &>/dev/null; then
  echo "üßπ Cleaning up dangling k3d containers..."
  docker ps -a --filter "name=k3d-" -q | xargs -r docker rm -f
else
  echo "‚ö†Ô∏è Docker not found, skipping..."
fi

# 3. –ß–∏—Å—Ç–∏–º Terraform –≤ dev-local
TF_DIR="iac/environments/dev-local"
if [ -d "$TF_DIR" ]; then
  echo "üßπ Cleaning Terraform caches and state in $TF_DIR ..."
  rm -rf "$TF_DIR/.terraform" \
         "$TF_DIR/.terraform.lock.hcl" \
         "$TF_DIR/terraform.tfstate" \
         "$TF_DIR/terraform.tfstate.backup" || true
else
  echo "‚ö†Ô∏è $TF_DIR not found, skipping..."
fi

# 4. (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ß–∏—Å—Ç–∏–º kubeconfig –æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤
if [ -f "$HOME/.kube/config" ]; then
  echo "üßπ Removing stale k3d contexts from kubeconfig..."
  for ctx in $(kubectl config get-contexts -o name | grep '^k3d-'); do
    kubectl config delete-context "$ctx" || true
    kubectl config delete-cluster "$ctx" || true
    kubectl config delete-user "admin@$ctx" || true
  done
else
  echo "‚ö†Ô∏è No kubeconfig found, skipping..."
fi

echo "‚úÖ Hard reset complete! You can now run:"
echo "   cd iac/environments/dev-local && terraform init && terraform apply"
