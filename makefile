# –ö–æ—Ä–Ω–µ–≤–æ–π Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π

CLUSTER_DIR=iac/environments/dev-local/cluster
PLATFORM_DIR=iac/environments/dev-local/platform

.PHONY: up down reset cluster-up cluster-down platform-up platform-down argocd-password

## –ü–æ–¥–Ω—è—Ç—å –∫–ª–∞—Å—Ç–µ—Ä –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
up: cluster-up platform-up
	@echo "‚úÖ –ö–ª–∞—Å—Ç–µ—Ä –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–æ–¥–Ω—è—Ç—ã"

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞
define wait_for_cluster
  echo "‚è≥ Waiting for Kubernetes API..."
  until kubectl cluster-info &>/dev/null; do \
    echo "   ... still waiting"; \
    sleep 5; \
  done; \
  echo "‚úÖ API is reachable"

  echo "‚è≥ Waiting for nodes to be Ready..."
  kubectl wait --for=condition=Ready nodes --all --timeout=120s
  echo "‚úÖ All nodes are Ready"
endef

.PHONY: up down reset cluster platform

## üöÄ –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫: –∫–ª–∞—Å—Ç–µ—Ä + –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞
up: cluster platform

## üî• –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ: —Å–Ω–∞—á–∞–ª–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –ø–æ—Ç–æ–º –∫–ª–∞—Å—Ç–µ—Ä
down:
	@echo "üî• Destroying platform..."
	cd $(PLATFORM_DIR) && terraform destroy -auto-approve || true
	@echo "üî• Destroying cluster..."
	cd $(CLUSTER_DIR) && terraform destroy -auto-approve || true

## ‚ôªÔ∏è –ü–æ–ª–Ω—ã–π —Ä–µ—Å–µ—Ç —Å—Ç–µ–π—Ç–æ–≤ –∏ –∫–µ—à–µ–π
reset:
	@echo "üßπ Resetting Terraform states and caches..."
	find . -type d -name ".terraform" -exec rm -rf {} +
	find . -type f -name "terraform.tfstate*" -delete
	@echo "‚úÖ All Terraform states and caches have been removed."

## ‚öôÔ∏è –ü–æ–¥–Ω—è—Ç—å –∫–ª–∞—Å—Ç–µ—Ä
cluster:
	@echo "üöÄ Applying cluster..."
	cd $(CLUSTER_DIR) && terraform init -upgrade && terraform apply -auto-approve
	@$(call wait_for_cluster)

## ‚öôÔ∏è –ü–æ–¥–Ω—è—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—É (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–ª–∞—Å—Ç–µ—Ä —É–∂–µ –≥–æ—Ç–æ–≤)
platform:
	@echo "üöÄ Applying platform..."
	cd $(PLATFORM_DIR) && terraform init -upgrade && terraform apply -auto-approve

## –ü–æ–∫–∞–∑–∞—Ç—å –∫—Ä–µ–¥—ã –¥–ª—è ArgoCD
argocd-password:
	@echo "üîë ArgoCD URL: https://argocd.localhost"
	@echo "üë§ Username: admin"
	@echo -n "üîí Password: "
	@kubectl -n argocd get secret argocd-initial-admin-secret \
		-o jsonpath="{.data.password}" | base64 -d; echo

bootstrap-apps:
	@echo "‚è≥ –ñ–¥—ë–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ ArgoCD server..."
	@kubectl -n argocd rollout status deploy/argocd-server --timeout=180s
	@echo "üöÄ –ü—Ä–∏–º–µ–Ω—è–µ–º root Application (apps.yaml)..."
	kubectl -n argocd apply -f gitops/bootstrap/apps.yaml
	@echo "‚úÖ Bootstrap –∑–∞–≤–µ—Ä—à—ë–Ω. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	kubectl -n argocd get applications
